2016-07-05 박한 스터디
상근
2016-07-21 06:27:06.364872
<div style="font-family:'Helvetica Neue';font-size:14px;"><!--?xml version="1.0" encoding="UTF-8" standalone="no"?-->

<div>오늘의 목표
</div><ul><li>블로그 템플릿을 만들고 (base.html, blog.html, post.html)</li><li>블로그에 글을 써서 (request, method, POST, form)</li><li>파일 형식으로 저장하고 (post/%d.post, 파일 안에는 제목, 저자, 날짜, 내용)</li><li>파일 안에 있는 데이터를 템플릿에 넘긴다 (render_template(template_name, variable=variable) )</li></ul><div><br></div><div>우리는 이쁜 디자인을 가져다 쓸 수 있도록 bootstrap을 이용한다.
</div><div>static 디렉토리를 만들고
</div><div>해당 위치에서&nbsp;
</div><div>$ wget 부트스트랩 주소
</div><div><br></div><div>(zip 파일을 풀기 위해서는 unzip이 필요한데, 안깔려있다면 aptitude를 이용해서 설치한다.)
</div><div><br></div><div>bootstrap은 jquery를 필요로 한다.
</div><div>$ wget jquery 주소
</div><div><br></div><div>static 밑에 css, js 디렉토리를 만들고 부트스트랩의 css파일은 static/css에&nbsp;
</div><div>부트스트랩, jquery의 js 파일은 js 에 넣는다
</div><div><br></div><div>보통의 홈페이지는 비슷한 구조를 가지고 있다. 특히 header, footer 부분은 거의 안바뀐다고 보면 된다.
</div><div>이 때문에 flask에는 기본 구조를 갖는 base 를 extends를 하여 변하는 부분 템플릿을 작성한다.
</div><div><br></div><div>base.html 는 기본 html 포멧으로 만들면 된다.
</div><div>&lt;html&gt;
</div><div>&lt;head&gt;
</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel="stylesheet" href="{{ url_for('static',filename='css/bootstrap.min.css') }}" type="text/css"&gt;
</div><div>&nbsp; &nbsp; &lt;script src="{{ url_for('static',filename='js/jquery-1.11.0.min.js') }}"&gt;&lt;/script&gt;
</div><div>&nbsp; &nbsp; &lt;script src="{{ url_for('static',filename='js/bootstrap.min.js') }}"&gt;&lt;/script&gt;
</div><div>&lt;/head&gt;
</div><div>&lt;body&gt;
</div><div>&lt;/body&gt;
</div><div>&lt;/html&gt;
</div><div><br></div><div>여기서 앞으로 바뀌는 부분에
</div><div>{% block content %}
</div><div>{% endblock %} &nbsp;을 넣어준다.
</div><div><br></div><div>ex)&nbsp;
</div><div><div>&lt;html&gt;
</div><div>&lt;head&gt;
</div><div>&lt;/head&gt;
</div></div><div>&lt;body&gt;
</div><div>{% block content %}
</div><div>{% endblock %}
</div><div>&lt;/body&gt;
</div><div>&lt;/html&gt;
</div><div><br></div><div>blog.html 을 생성하여 바뀌는 부분만 코딩해본다.
</div><div>ex)
</div><div>{% extends “base.html” %}
</div><div>{% block content %}
</div><div>여기 바뀜
</div><div>{% endblock %}
</div><div><br></div><div>routes.py에서 라우터를 만들어준다
</div><div>@app.route(‘/‘)
</div><div>def main():
</div><div>&nbsp; &nbsp; &nbsp;return render_template(‘blog.html’)
</div><div><br></div><div>잘 되는걸 알 수 있다.
</div><div><br></div><div><hr></div><div>이제 우리의 블로그 디자인을 해본다.
</div><div>왼쪽 400px은 고정시켜서 블로그의 글 제목 리스트를 보여주도록 만들고,
</div><div>나머지 여백에 글의 상세 내용을 보여주도록 한다.
</div><div><b>그럼 왼쪽 리스트 공간이 사실 우리 블로그의 네비게이션 역할을 하게 된다.</b></div><div><b>&gt;&gt; 고정 페이지 &gt;&gt; base.html에 있어야 겠구나!</b></div><div><b><br></b></div><div>그럼 일단 왼쪽과 오른쪽으로 나눠야 한다. 옛날같으면 frame으로 했지만 <s>우린 옛날사람이 아니다</s>
</div><div>css를 이용해서 나눌건데, HTML의 div tag를 이용하여 구분할 예정이다.
</div><div>&lt;head&gt;&lt;/head&gt; 안에 &lt;style&gt; &lt;/style&gt; 이부분 안에 css 코딩을 할 수 있는데,
</div><div><s>그냥 static/css/style.css 에 코딩을 다 한 뒤, link tag 로 불러와도 된다.</s></div><div>우리는 그냥 style에다 코딩할거임
</div><div><br></div><div>&lt;style&gt;
</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;body {
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; overflow: hidden;
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin : 0;
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding : 0 ;
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #leftside {
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; position: absolute;
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: 400px;
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; height: 100%;
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background: #123456;
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; overflow-y: scroll;
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #rightside {
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; position: absolute;
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-left: 400px;
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width : inherit;
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; height: 100%;
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background: white;
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; overflow: scroll;
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display: inline-block;
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }
</div><div>&lt;/style&gt;
</div><div><br></div><div>여기의 #leftside 는 div id=“leftside” 를 의미한다.
</div><div>leftside는 400px 만큼의 고정 너비를 갖고 rightside는 400px 만큼 margin을 갖는다.
</div><div>이후 base.html에 고정 부분(block content 바깥)에 leftside를 넣고 rightside 밑에 block content를 넣으면 된다.
</div><div><br></div><div>&lt;body&gt;
</div><div>&lt;div id="leftside"&gt;
</div><div>&lt;/div&gt;
</div><div>&lt;div id="rightside"&gt;
</div><div>{% block content %}
</div><div>{% endblock %}
</div><div>&lt;/div&gt;
</div><div>&lt;/body&gt;
</div><div><br></div><div>이제 글을 써볼건데 routes.py 에서 /create_post 를 라우팅해주고
</div><div>bootstrap의 이쁜 form과 button 클래스를 이용하기위해 메뉴얼을 참고한다.
</div><div>(<a href="http://getbootstrap.com/css/#forms">http://getbootstrap.com/css/#forms</a>)</div><div>&nbsp;</div></div><div style="font-family:'Helvetica Neue';font-size:14px;">그리고 블로그 글에는 간단히 글 제목, 저자, 날짜, 글 내용 만 받기로 한다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;">클라이언트(HTML) 에서 서버(flask) 로 정보를 넘길 때에는 form tag를 이용해서 넘기는데,
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&lt;form action=“/받을 주소” method=“POST”&gt;&nbsp;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp;&lt;button&gt; 전송 &lt;/button&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&lt;/form&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">form 으로 감싼 button을 클릭하면 감싸고 있는 form의 정보로 전송된다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;">HTTP 통신에는 크게 GET과 POST 방식이 있는데, 간단히 GET은 브라우저 주소를 통해 접근하는 거고
</div><div style="font-family:'Helvetica Neue';font-size:14px;">POST는 일반적이지 않게 접근하는 방식이다. 나중에 자세히 설명하겠음
</div><div style="font-family:'Helvetica Neue';font-size:14px;"><br></div><div style="font-family:'Helvetica Neue';font-size:14px;">{% extends "base.html" %}
</div><div style="font-family:'Helvetica Neue';font-size:14px;">{% block content %}
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&lt;!--
</div><div style="font-family:'Helvetica Neue';font-size:14px;">blog post attribute
</div><div style="font-family:'Helvetica Neue';font-size:14px;">title, body, author, date
</div><div style="font-family:'Helvetica Neue';font-size:14px;">--&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&lt;div class="container" style="padding-right:400px;"&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &lt;form action="/save_post" method="POST"&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &lt;div class="form-group"&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;label&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 포스트 제목
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/label&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;input class="form-control" type="text" id="post_name" name="post_name" placeholder="포스트 제목을 쓰세요"&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &lt;div class="form-group"&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;label&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 포스트 작성자&nbsp;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/label&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;input class="form-control" type="text" id="post_author" name="post_author" placeholder="포스트 작성자를 쓰세요"&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &lt;div class="form-group"&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;label&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 포스트 내용
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/label&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;textarea class="form-control" type="text" id="post_body" name="post_body" &gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/textarea&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &lt;button class="btn btn-primary"&gt;저장하기&lt;/button&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &lt;/form&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&lt;/div&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">{% endblock %}
</div><div style="font-family:'Helvetica Neue';font-size:14px;"><br></div><div style="font-family:'Helvetica Neue';font-size:14px;">여기까지 코딩하고 버튼을 누르면 page not found가 뜬다.(당연)
</div><div style="font-family:'Helvetica Neue';font-size:14px;">routes.py에 가서 save_post 를 라우팅해준다. 이 때, 우리는 POST로 전송할 것이기 때문에
</div><div style="font-family:'Helvetica Neue';font-size:14px;">@app.route('/save_post',methods=['POST’]) 로 라우팅해준다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;">서버(flask)단에서 받을 때에는 request.form[’name’] 으로 받을 수 있다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;">출력해보면 잘 나오는 걸 볼 수 있고, 이제 이 정보를 post 디렉토리 밑에 번호를 매겨서(1부터 n개) 저장할 예정이다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;"><br></div><div style="font-family:'Helvetica Neue';font-size:14px;">일단 post 디렉토리가 없으면 생성을 해야 하므로 createDicectory 함수를 만든다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;">def createDirectory(directoryName):
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; if not os.path.exists(directoryName):
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; command = 'mkdir %s'%directoryName
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; ret = commands.getoutput(command)
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; command = 'chmod 777 %s'%directoryName
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; ret = commands.getoutput(command)
</div><div style="font-family:'Helvetica Neue';font-size:14px;"><br></div><div style="font-family:'Helvetica Neue';font-size:14px;">존재하는지 판단하기 위해 os.path.exists를 이용하는데 이 때 import os가 필요하다
</div><div style="font-family:'Helvetica Neue';font-size:14px;">linux 명령어를 실행하기 위해서 commands.getoutput 함수를 이용하는데 이 때 import commands가 필요하다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;">ret은 명령어 수행 결과를 반환하는데 <s>필요없다.</s>
</div><div style="font-family:'Helvetica Neue';font-size:14px;"><s><br></s></div><div style="font-family:'Helvetica Neue';font-size:14px;">현재 저장된 포스트정보를 가져오기 위해 *.post로 끝나는 파일명을 전부 가져와야되는데
</div><div style="font-family:'Helvetica Neue';font-size:14px;">이는 glob을 통하여 해결할 수 있다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;">import glob
</div><div style="font-family:'Helvetica Neue';font-size:14px;">filenames = glob.glob(regular expression) 을 이용하면 regular expression에 의해 일치되는 파일들의 주소를 구할 수 있다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;">우리는 post 디렉토리 밑에 %d.post 로 저장했으므로
</div><div style="font-family:'Helvetica Neue';font-size:14px;">filenames = glob.glob(‘absolute_path/post/*.post’) 로 파일명 주소를 구할 수 있다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;"><br></div><div style="font-family:'Helvetica Neue';font-size:14px;">def get_all_posts():
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; createDirectory('/var/www/flask_blog/flask_blog/post/')
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; filenames = glob.glob('/var/www/flask_blog/flask_blog/post/*.post')
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; return filenames
</div><div style="font-family:'Helvetica Neue';font-size:14px;"><br></div><div style="font-family:'Helvetica Neue';font-size:14px;">우리는 마지막으로 저장된 포스트의 숫자를 알아야 한다.(이번에 저장할 숫자 = 마지막 숫자 + 1)
</div><div style="font-family:'Helvetica Neue';font-size:14px;"><br></div><div style="font-family:'Helvetica Neue';font-size:14px;">def get_max_post_number(filenames):
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; ret = 0
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; for filename in filenames:
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; only_filename = filename.split('/')[-1]
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; only_number = int(only_filename.split('.')[0])
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; ret = max(ret, only_number)
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; return ret
</div><div style="font-family:'Helvetica Neue';font-size:14px;"><br></div><div style="font-family:'Helvetica Neue';font-size:14px;">glob으로 구한 filenames를 인자로 하고, 각각의 파일명을 돌면서 only_filename을 구하고 %d.post의 형식에서 %d만 가져온다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;">이렇게 맥스값을 구하고
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;s = '%s\n%s\n%s\n%s'%(post_name,post_author,str(post_date),post_body)
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; post_names = get_all_posts()
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; last_post_number = get_max_post_number(post_names)
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; next_filename = '/var/www/flask_blog/flask_blog/post/%d.post'%(last_post_number+1)
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; with open(next_filename,'w') as fp:
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fp.write(s)
</div><div style="font-family:'Helvetica Neue';font-size:14px;">이렇게 파일에 블로그 포스트 정보를 저장 할 수 있다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;">실제로 저장이 되는 것을 확인한다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;"><br></div><div style="font-family:'Helvetica Neue';font-size:14px;"><br></div><div style="font-family:'Helvetica Neue';font-size:14px;"><hr></div><div style="font-family:'Helvetica Neue';font-size:14px;">마지막으로 저장된 글을 불러와야 하는데, 왼쪽 네비게이션에 글 제목을 넣을 예정이다.&nbsp;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">따라서 모든 글 리스트의 정보를 구해야 하므로&nbsp;def get_all_post_information(post_names) 함수를 작성한다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;">이 함수는 블로그 글들의 파일명 주소를 갖고 list&lt;dictionary&gt;형태로 반환한다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;"><br></div><div style="font-family:'Helvetica Neue';font-size:14px;">def get_all_post_information(post_names):
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; ret = []
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; for post_name in post_names:
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; d = {}
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; with open(post_name,'r') as fp:
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lines = fp.read().strip().split('\n')
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; d['post_id'] = post_name.split('/')[-1].split('.')[0]
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; d['post_name'] = lines[0]
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; d['post_author'] = lines[1]
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; d['post_date'] = lines[2]
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; d['post_body'] = ''
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; for body in lines[3:]:
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d['post_body'] += body
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; ret.append(d)
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; return ret
</div><div style="font-family:'Helvetica Neue';font-size:14px;"><br></div><div style="font-family:'Helvetica Neue';font-size:14px;">그리고 네비게이션을 갖는 모든 페이지에&nbsp;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">posts = get_all_posts()
</div><div style="font-family:'Helvetica Neue';font-size:14px;">ret_posts = get_all_post_information(posts)
</div><div style="font-family:'Helvetica Neue';font-size:14px;">return render_template('blog.html',ret_posts=ret_posts)
</div><div style="font-family:'Helvetica Neue';font-size:14px;"><br></div><div style="font-family:'Helvetica Neue';font-size:14px;">이렇게 블로그 정보들을 넘겨준다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;"><br></div><div style="font-family:'Helvetica Neue';font-size:14px;">base.html 로 와서 네비게이션에 넘겨진 정보를 보여준다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;"><br></div><div style="font-family:'Helvetica Neue';font-size:14px;">&lt;div id="leftside"&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &lt;div class="container"&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &lt;h2 style="color: white;"&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &lt;a href="/create_post" style="color: white;"&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 글 작성하기
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &lt;/a&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &lt;/h2&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; {% for post in ret_posts %}
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &lt;h2 style="color: white;"&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &lt;a href="/post/{{post.post_id}}" style="color: white;"&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; {{ post.post_name }}
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &lt;/a&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &lt;/h2&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; {% endfor%}
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&lt;/div&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;"><br></div><div style="font-family:'Helvetica Neue';font-size:14px;">블로그 포스트 제목을 클릭했을 때 해당 포스트를 보여주는 블로그 포스트 디테일 페이지를 만들어야한다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&lt;a href="/post/{{post.post_id}}" style="color: white;"&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">이런 형식으로 제작해야 하므로 routes.py 에 와서
</div><div style="font-family:'Helvetica Neue';font-size:14px;"><br></div><div style="font-family:'Helvetica Neue';font-size:14px;">@app.route('/post/&lt;post_id&gt;')
</div><div style="font-family:'Helvetica Neue';font-size:14px;">def post_detail(post_id):
</div><div style="font-family:'Helvetica Neue';font-size:14px;">이렇게 라우팅해준다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;">라우팅 할 주도 뒤에 변수가 들어오려면 이렇식으로 넘겨준다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;">예를 들어 브라우저에서&nbsp;<a href="http://52.78.55.223/post/7">http://52.78.55.223/post/7</a>&nbsp;로 들어오면 post_id 변수에는 7이 저장된다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;"><br></div><div style="font-family:'Helvetica Neue';font-size:14px;">@app.route('/post/&lt;post_id&gt;')
</div><div style="font-family:'Helvetica Neue';font-size:14px;">def post_detail(post_id):
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; posts = get_all_posts()
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; ret_posts = get_all_post_information(posts)
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; ret = {}
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; for post in ret_posts:
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; if post['post_id'].strip() == post_id.strip():
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ret = post
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; return render_template('post.html',ret_posts=ret_posts,post=ret)
</div><div style="font-family:'Helvetica Neue';font-size:14px;">인자로 넘어온 post_id에 해당하는 post를 찾아서 정보를 가져오고 템플릿에 넘겨준다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;">post.html 에서 해당 정보를 보여준다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;">{% extends "base.html" %}
</div><div style="font-family:'Helvetica Neue';font-size:14px;">{% block content %}
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&lt;div class="container" style="width:inherit;"&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&lt;h1&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; {{ post.post_name }}
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; {{ post.post_author }}
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; {{ post.post_date }}
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&nbsp; &nbsp; {{ post.post_body }}
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&lt;/h1&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&lt;/div&gt;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">{% endblock %}
</div><div style="font-family:'Helvetica Neue';font-size:14px;"><br></div><div style="font-family:'Helvetica Neue';font-size:14px;">끝!!
</div><div style="font-family:'Helvetica Neue';font-size:14px;">그런데 한글로 되어진 글을 입력했는데 유니코드 에러가 뜬다
</div><div style="font-family:'Helvetica Neue';font-size:14px;">이는 두 가지 문제가 있는데(당연히) 서버 혹은 클라이언트의 문제다.
</div><div style="font-family:'Helvetica Neue';font-size:14px;">우리 서버 routes.py의 맨 위에는 #-*- coding:utf-8 -*- 이 있다면 클라이언트(base.html) 의 &lt;head&gt;&lt;/head&gt;에&nbsp;
</div><div style="font-family:'Helvetica Neue';font-size:14px;">&lt;meta charset="UTF-8"&gt;
</div><p><!--?xml version="1.0" encoding="UTF-8" standalone="no"?-->

</p><div style="font-family: &quot;Helvetica Neue&quot;;">를 추가해준다.&nbsp;</div>